#!/bin/bash
# COLOR VALIDATION
clear
CELADON="\033[38;5;86m"
HONEY="\033[38;2;204;169;50m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
YELL='\033[0;33m'
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
username=$(curl https://raw.githubusercontent.com/bestmpc/x/main/access/ip| grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl https://raw.githubusercontent.com/bestmpc/x/main/access/ip | grep $MYIP | awk '{print $4}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status Expired Active
Info="(${green}Active${NC})"
Error="(${RED}Expired${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl https://raw.githubusercontent.com/bestmpc/x/main/access/ip | grep $MYIP | awk '{print $4}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mloading...\e[0m"
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"

# Getting CPU Information
bandwidthm=$(vnstat -m)
bandwithhd=$(vnstat -d)
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
ISP=$(curl -s ipinfo.io/org | cut -d " " -f 2-10 )
CITY=$(curl -s ipinfo.io/city )
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status
clear
# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="◎"
else
   status_ssh="${RED}⊗${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}◎${NC}"
else
    status_ws_epro="${RED}⊗${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}◎${NC}"
else
   status_haproxy="${RED}⊗${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}◎${NC}"
else
   status_xray="${RED}⊗${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}◎${NC}"
else
   status_nginx="${RED}⊗${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}◎${NC}"
else
   status_dropbear="${RED}⊗${NC} "
fi
vm=$(cat /etc/vmess/.vmess.db | wc -l)
vll=$(cat /etc/vless/.vless.db | wc -l)
trr=$(cat /etc/trojan/.trojan.db | wc -l)
ssk=$(cat /etc/shadowsocks/.shadowsocks.db | wc -l)
sssh=$(cat /etc/ssh/.ssh.db | wc -l)
echo -e " "
echo -e "${CELADON}╔════════════════════════════•●•════════════════════════════╗${NC}"
echo -e "${CELADON}│${NC}\033[48;2;204;169;50m                   SYSTEM INFORMATION                      ${NC}${CELADON}│${NC}"
echo -e "${CELADON}╚════════════════════════════•●•════════════════════════════╝${NC}"

echo -e " ${CELADON}╔══════════════════════════════════════════════════════════╗${NC}"
echo -e " ${CELADON}│$NC System OS${NC}     $CELADON=$NC $MODEL${NC}"
echo -e " ${CELADON}│$NC IP VPS${NC}        $CELADON=$NC $IPVPS${NC}"
echo -e " ${CELADON}│$NC Domain${NC}        $CELADON=$NC $domain${NC}"
echo -e " ${CELADON}│$NC Bandwith${NC}      $CELADON=$NC $bandwithd${NC} $NC (1 day)${NC}"
echo -e " ${CELADON}│$NC Bandwith${NC}      $CELADON=$NC $bandwithm${NC} $NC (30 days)${NC}"
echo -e " ${CELADON}│$NC User${NC}          $CELADON=$NC $username${NC}"
echo -e " ${CELADON}│$NC Expiry script${NC} $CELADON=$HONEY $certifacate${NC} days $sts"
echo -e " ${CELADON}╚══════════════════════════════════════════════════════════╝${NC}"
echo -e "         SSH : $status_ssh" "         NGINX : $status_nginx" "         XRAY : $status_xray         $NC" 
echo -e " ${CELADON}════════════════════════════════════════════════════════════${NC}"
echo -e "               SSH = $sssh" "  VMESS = $vm"  " VLESS = $vll"
echo -e "                 TROJAN = $trr" "SHADOWSICKS = $ssk"
echo -e " ${CELADON}╔══════════════════════════════════════════════════════════╗${NC}"
echo -e " ${CELADON}│$NC [${HONEY}01${NC}] TRIAL  MENU            ${CELADON}│$NC         [${HONEY}05${NC}] TROJAN MENU   ${CELADON}│$NC" 
echo -e " ${CELADON}│$NC [${HONEY}02${NC}] SSH    MENU            ${CELADON}│$NC         [${HONEY}06${NC}] SHADOW MENU   ${CELADON}│$NC"    
echo -e " ${CELADON}│$NC [${HONEY}03${NC}] VMESS  MENU            ${CELADON}│$NC         [${HONEY}07${NC}] DELL ACCOUNT  ${CELADON}│$NC"   
echo -e " ${CELADON}│$NC [${HONEY}04${NC}] VLESS  MENU            ${CELADON}│$NC         [${HONEY}08${NC}] FEATURE       ${CELADON}│$NC" 
echo -e " ${CELADON}╚══════════════════════════════════════════════════════════╝${NC}"
echo
read -p " Select menu : " menu
echo -e ""
case $menu in
1 | 01)
clear
m-trial
;;
2 | 02)
clear
m-sshws
;;
3 | 03)
clear
m-vmess
;;
4 | 04)
clear
m-vless
;;
5 | 05)
clear
m-trojan
;;
6 | 06)
clear
m-ssws
;;
7 | 07)
clear
xp
echo ""
echo -e " ${GREEN} Back to menu in 1 sec ${NC}"
sleep 1
menu
;;
8 | 08)
clear
feature
;;
esac
